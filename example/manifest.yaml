apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-controller
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: user-controller
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "rolebindings"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests", "certificatesigningrequests/approval", "certificatesigningrequests/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles"]
  verbs: ["bind", "escalate"] 
- apiGroups: ["certificates.k8s.io"]
  resources: ["signers"]
  resourceNames: ["kubernetes.io/kube-apiserver-client"]
  verbs: ["approve"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: user-controller
subjects:
- kind: ServiceAccount
  name: user-controller
  namespace: default
roleRef:
    kind: ClusterRole
    name: user-controller
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: user-controller-cluster
subjects:
- kind: ServiceAccount
  name: user-controller
  namespace: default
roleRef:
    kind: ClusterRole
    name: cluster-admin
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-controller
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-controller
  template:
    metadata:
      labels:
        app: user-controller
    spec:
      serviceAccountName: user-controller
      containers:
      - name: controller
        image: aboogie/rbac-controller:latest # Replace with your image
        env:
        - name: GIT_REPO_URL
          value: "https://github.com/aboogie24/k8s-rbac-config.git"
        - name: GIT_REPO_PATH
          value: "/repo"
        - name: CERT_DIR
          value: "/certs"
        volumeMounts:
        - name: repo-volume
          mountPath: /repo
        - name: cert-volume
          mountPath: /certs
      volumes:
      - name: repo-volume
        emptyDir: {}
      - name: cert-volume
        emptyDir: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: user-controller-trigger
  namespace: default
  labels:
    app: user-controller
data:
  lastCommit: "initial"  # This will be updated by the controller

---

apiVersion: v1
kind: Secret
metadata:
  name: user-controller
  namespace: default
  annotations:
    kubernetes.io/service-account.name: user-controller
type: kubernetes.io/service-account-token